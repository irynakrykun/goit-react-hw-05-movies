{"version":3,"file":"static/js/549.4bac5727.chunk.js","mappings":"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","sources":["FetchApi.js","components/Loader/Loader.styled.js","components/Loader/Loader.jsx","components/MovieInfo/MovieInfo.styled.js","components/MovieInfo/MovieInfo.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: 'c65b1581ed69fd3b6701ed620730aaec',\n};\n\nexport const getTrendingFilms = async () => {\n  const { data } = await axios.get(`trending/all/day?`);\n  return data.results;\n};\n\nexport const searchFilms = async movieName => {\n  const { data } = await axios.get(`search/movie?query=${movieName}`);\n  return data.results;\n};\n\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}?`);\n  return data;\n};\n\nexport const getMovieCredits = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}/credits?`);\n  return data.cast;\n};\n\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}/reviews?`);\n\n  return data.results;\n};\n","import styled from 'styled-components';\nexport const Spiner = styled.div`\n  text-align: center;`","import PropTypes from 'prop-types';\nimport { RotatingLines } from 'react-loader-spinner';\nimport {Spiner} from './Loader.styled'\n\nexport const Loader = () => {\n  return (\n    <Spiner>\n      <RotatingLines\n        strokeColor=\"grey\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"96\"\n        visible={true}\n      />\n    </Spiner>\n  );\n};\nLoader.propTypes = {\n  strokeColor: PropTypes.string,\n  strokeWidth: PropTypes.string,\n  animationDuration: PropTypes.string,\n  visible: PropTypes.bool,\n  width: PropTypes.number,\n};","import styled from 'styled-components';\nexport const ContainerInfo = styled.div`\n  display:block;\n  margin-right: 50%\n  margin-left:50px\n  `;\nexport const ImgBlock = styled.img`\n      display: block;\n    max-width: 100%;\n    margin-right: 30px;\n    margin-top: 10px`\nexport const CardContainer = styled.div`\n    display:flex ;`","import { ImgBlock, ContainerInfo, CardContainer } from './MovieInfo.styled';\nimport PropTypes from 'prop-types';\nconst IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const MovieInfo = ({\n  movies: {\n    title,\n    poster_path,\n    overview,\n    genres,\n    name,\n    vote_average,\n    release_date,\n  },\n}) => {\n  return (\n    <>\n      <CardContainer>\n        <ImgBlock src={IMG_URL + poster_path} alt={title} width=\"180\" />\n        <ContainerInfo>\n          <h2>\n            {title || name} {`${new Date(release_date).getFullYear()}`}\n          </h2>\n          <p>User score: {Math.ceil(vote_average * 10)} %</p>\n          <h2>Overview</h2>\n          <p>{overview}</p>\n          <h2>Gernes</h2>\n          <p>\n            {genres?.length > 0\n              ? genres.map(genre => genre.name).join(', ')\n              : '-'}\n          </p>\n        </ContainerInfo>\n      </CardContainer>\n    </>\n  );\n};\nMovieInfo.propTypes = {\n  title: PropTypes.string.isRequired,\n  poster_path: PropTypes.string.isRequired,\n  overview: PropTypes.string.isRequired,\n  genres: PropTypes.arrayOf.isRequired,\n  nam: PropTypes.string.isRequired,\n  vote_average: PropTypes.number,\n  release_date: PropTypes.number,\n};\n    ","import { Link, Outlet, useLocation } from 'react-router-dom';\nimport { Suspense } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieDetails } from 'FetchApi';\nimport { useEffect, useState } from 'react';\nimport { MovieInfo } from 'components/MovieInfo/MovieInfo';\nimport { Loader } from 'components/Loader/Loader';\n\nconst MovieDetails = () => {\n  const [movies, setMovies] = useState('');\n  const { movieId } = useParams();\n  const [isLoading, setIsLoading] = useState(false);\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  useEffect(() => {\n    if (movieId === '') return;\n    const MovieDetails = async () => {\n      try {\n        setIsLoading(true);\n        const data = await getMovieDetails(movieId);\n        setMovies(data);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    MovieDetails();\n  }, [movieId]);\n\n  return (\n    <>\n      <Link to={backLinkHref}>Go Back</Link>\n      {isLoading && <Loader />}\n\n      <MovieInfo movies={movies} />\n      <div>\n        <h2>Additinial information</h2>\n        <ul>\n          <li>\n            <Link to={'cast'} state={{ from: location?.state?.from }}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link to={'reviews'} state={{ from: location?.state?.from }}>\n              Reviews\n            </Link>\n          </li>\n        </ul>\n        <Suspense fallback={<div>Loading subpage...</div>}>\n          <Outlet />\n        </Suspense>\n      </div>\n    </>\n  );\n};\nexport default MovieDetails;\n"],"names":["axios","api_key","getTrendingFilms","data","results","searchFilms","movieName","getMovieDetails","movieId","getMovieCredits","cast","getMovieReviews","Spiner","styled","Loader","strokeColor","strokeWidth","animationDuration","width","visible","ContainerInfo","ImgBlock","CardContainer","MovieInfo","movies","title","poster_path","overview","genres","name","vote_average","release_date","src","alt","Date","getFullYear","Math","ceil","length","map","genre","join","useState","setMovies","useParams","isLoading","setIsLoading","location","useLocation","backLinkHref","state","from","useEffect","MovieDetails","console","log","to","Suspense","fallback"],"sourceRoot":""}
{"version":3,"file":"static/js/822.d2036e8f.chunk.js","mappings":"+SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAAS,oCAGJ,IAAMC,EAAgB,mCAAG,sGACPF,EAAAA,EAAAA,IAAA,qBADO,uBACtBG,EADsB,EACtBA,KADsB,kBAEvBA,EAAKC,SAFkB,2CAAH,qDAKhBC,EAAW,mCAAG,WAAMC,GAAN,yFACFN,EAAAA,EAAAA,IAAA,6BAAgCM,IAD9B,uBACjBH,EADiB,EACjBA,KADiB,kBAElBA,EAAKC,SAFa,2CAAH,sDAKXG,EAAe,mCAAG,WAAMC,GAAN,yFACNR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,MADM,uBACrBL,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfM,EAAe,mCAAG,WAAMD,GAAN,yFACNR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,cADM,uBACrBL,EADqB,EACrBA,KADqB,kBAEtBA,EAAKO,MAFiB,2CAAH,sDAKfC,EAAe,mCAAG,WAAMH,GAAN,yFACNR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,cADM,uBACrBL,EADqB,EACrBA,KADqB,kBAGtBA,EAAKC,SAHiB,2CAAH,qD,8ICzBfQ,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC1B,GAAkCC,EAAAA,EAAAA,UAAS,IAA3C,eAAOR,EAAP,KAAkBS,EAAlB,KAgBA,OACE,+BACE,kBAAMF,SAhBW,SAAAG,GACnBA,EAAEC,iBACuB,KAArBX,EAAUY,QAIdL,EAASP,GACTS,EAAa,KAJXI,MAAM,gBAKT,EAQG,WACE,kBACEC,KAAK,OACLC,KAAK,YACLC,MAAOhB,EACPiB,SAXkB,SAAAP,GACxBD,EAAaC,EAAEQ,cAAcF,MAAMG,cACpC,KAWK,mBAAQL,KAAK,SAAb,wBAIP,E,SC9BYM,EAAkB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC1BC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,yBACGF,IACC,wBACGA,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOX,EAAd,EAAcA,KAAd,OACV,yBACE,SAAC,KAAD,CAAMY,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMP,GAA1C,UACE,uBAAII,GAASX,OAFRU,EADC,OAWrB,EC4BD,EA1Ce,WAAO,IAAD,EACnB,GAA4BjB,EAAAA,EAAAA,UAAS,MAArC,eAAOa,EAAP,KAAeS,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMjC,EAAS,UAAGgC,EAAaE,IAAI,gBAApB,QAAgC,IAM/CC,EAAAA,EAAAA,YAAU,WACR,GAAkB,KAAdnC,EAAJ,CACA,IAAMoC,EAAU,mCAAG,8GAEMrC,EAAAA,EAAAA,IAAYC,GAFlB,OAETqB,EAFS,OAIfS,EAAUT,GAJK,gDAMfgB,QAAQC,IAAR,MANe,yDAAH,qDAShBF,GAV4B,CAW7B,GAAE,CAACpC,IAUJ,OACE,iCACE,SAACM,EAAD,CACEU,MAAOhB,EACPiB,SAZoB,SAAAsB,GAExBN,EAD6B,KAAVM,EAAe,CAAEA,MAAAA,GAAU,CAAC,EAEhD,EAUKhC,SA/BmB,SAAAP,GACvBiC,EAAgB,CAAEM,MAAOvC,GAC1B,KA+BG,SAACoB,EAAD,CAAiBC,OAAQA,MAG9B,C","sources":["FetchApi.js","components/SearchBox/SearchBox.jsx","components/SearchMovieList/SearchMovieList.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: 'c65b1581ed69fd3b6701ed620730aaec',\n};\n\nexport const getTrendingFilms = async () => {\n  const { data } = await axios.get(`trending/all/day?`);\n  return data.results;\n};\n\nexport const searchFilms = async movieName => {\n  const { data } = await axios.get(`search/movie?query=${movieName}`);\n  return data.results;\n};\n\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}?`);\n  return data;\n};\n\nexport const getMovieCredits = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}/credits?`);\n  return data.cast;\n};\n\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}/reviews?`);\n\n  return data.results;\n};\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nexport const SearchBox = ({ onSubmit }) => {\n  const [movieName, setMovieName] = useState('');\n\n  const handelSubmit = e => {\n    e.preventDefault();\n    if (movieName.trim() === '') {\n      alert('Enter a value');\n      return;\n    }\n    onSubmit(movieName);\n    setMovieName('');\n  };\n\n  const handelMovieChange = e => {\n    setMovieName(e.currentTarget.value.toLowerCase());\n  };\n\n  return (\n    <>\n      <form onSubmit={handelSubmit}>\n        <input\n          type=\"text\"\n          name=\"movieName\"\n          value={movieName}\n          onChange={handelMovieChange}\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n    </>\n  );\n};\nSearchBox.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { Link,useLocation} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nexport const SearchMovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <div>\n      {movies && (\n        <ul>\n          {movies.map(({ id, title, name }) => (\n            <li key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                <p>{title || name}</p>\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n  SearchMovieList.propTypes = {\n    movies: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        title: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n      \n      })\n    ).isRequired,\n  \n  };\n \n","import { searchFilms } from 'FetchApi';\nimport { useSearchParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { SearchBox } from 'components/SearchBox/SearchBox';\nimport { SearchMovieList } from 'components/SearchMovieList/SearchMovieList';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('query') ?? '';\n\n  const handleFormSubmit = movieName => {\n    setSearchParams({ query: movieName });\n  };\n\n  useEffect(() => {\n    if (movieName === '') return;\n    const fetchMovie = async () => {\n      try {\n        const movies = await searchFilms(movieName);\n\n        setMovies(movies);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchMovie();\n  }, [movieName]);\n\n  const updateQueryString = query => {\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n  };\n\n  //  const visibleMovies = movies.filter((movie) =>\n  //   movie.name.toLowerCase().includes(movieName.toLowerCase())\n  // );\n  return (\n    <>\n      <SearchBox\n        value={movieName}\n        onChange={updateQueryString}\n        onSubmit={handleFormSubmit}\n      />\n      <SearchMovieList movies={movies} />\n    </>\n  );\n};\nexport default Movies;\n"],"names":["axios","api_key","getTrendingFilms","data","results","searchFilms","movieName","getMovieDetails","movieId","getMovieCredits","cast","getMovieReviews","SearchBox","onSubmit","useState","setMovieName","e","preventDefault","trim","alert","type","name","value","onChange","currentTarget","toLowerCase","SearchMovieList","movies","location","useLocation","map","id","title","to","state","from","setMovies","useSearchParams","searchParams","setSearchParams","get","useEffect","fetchMovie","console","log","query"],"sourceRoot":""}
{"version":3,"file":"static/js/597.4300af16.chunk.js","mappings":"+SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAAS,oCAGJ,IAAMC,EAAgB,mCAAG,sGACLF,EAAAA,EAAAA,IAAA,qBADK,uBACpBG,EADoB,EACpBA,KADoB,kBAEnBA,EAAKC,SAFc,2CAAH,qDAKhBC,EAAW,mCAAI,WAAOC,GAAP,yFACLN,EAAAA,EAAAA,IAAA,6BAAgCM,IAD3B,uBACnBH,EADmB,EACnBA,KADmB,kBAEnBA,EAAKC,SAFc,2CAAJ,sDAKXG,EAAe,mCAAG,WAAOC,GAAP,yFACNR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,MADM,uBACrBL,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfM,EAAe,mCAAG,WAAOD,GAAP,yFACNR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,cADM,uBACrBL,EADqB,EACrBA,KADqB,kBAEpBA,EAAKO,MAFe,2CAAH,sDAMfC,EAAe,mCAAG,WAAOH,GAAP,yFACNR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,cADM,uBACrBL,EADqB,EACrBA,KACRS,QAAQC,IAAIV,EAAKC,SAFY,kBAGtBD,EAAKC,SAHiB,2CAAH,qD,kHCgB5B,UAvCc,WACZ,OAAwBU,EAAAA,EAAAA,UAAS,IAAjC,eAAOJ,EAAP,KAAaK,EAAb,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACQT,GAAYU,EAAAA,EAAAA,MAAZV,SAERW,EAAAA,EAAAA,YAAU,WACR,GAAgB,KAAZX,EAAJ,CACA,IAAMY,EAAI,mCAAG,oGAETH,GAAa,GAFJ,UAIUR,EAAAA,EAAAA,IAAgBD,GAJ1B,OAIHa,EAJG,OAKTN,EAAQM,GALC,gDAOTT,QAAQC,IAAI,SAPH,yBASTI,GAAa,GATJ,4EAAH,qDAYVG,GAb0B,CAc3B,GAAE,CAACZ,IAGJ,OACE,gCACGQ,IAAa,SAAC,IAAD,KAEd,wBACGN,EAAKY,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OACR,2BACE,gBAAKC,IARC,kCAQcH,EAAcI,IAAKH,EAAMI,MAAM,SACnD,wBAAKJ,KACL,uCAAeC,OAHRH,EADD,QAUjB,C,8EC1CYO,E,OAASC,GAAAA,IAAH,6C,SCGNC,EAAS,WACpB,OACE,SAACF,EAAD,WACE,SAAC,KAAD,CACEG,YAAY,OACZC,YAAY,IACZC,kBAAkB,OAClBN,MAAM,KACNO,SAAS,KAIhB,C","sources":["FetchApi.js","components/Cast.jsx","components/Loader/Loader.styled.js","components/Loader/Loader.jsx"],"sourcesContent":["import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: 'c65b1581ed69fd3b6701ed620730aaec',\n};\n\nexport const getTrendingFilms = async () => {\n    const { data } = await axios.get(`trending/all/day?`);\n      return data.results;\n};\n\nexport const searchFilms  = async (movieName) => {\n  const {data} = await axios.get(`search/movie?query=${movieName}`);\n  return data.results;\n};\n\nexport const getMovieDetails = async (movieId) => {\n  const { data } = await axios.get(`movie/${movieId}?`);\n  return data;\n};\n\nexport const getMovieCredits = async (movieId) => {\n  const { data } = await axios.get(`movie/${movieId}/credits?`);\n    return data.cast;\n \n};\n\nexport const getMovieReviews = async (movieId) => {\n  const { data } = await axios.get(`movie/${movieId}/reviews?`);\n  console.log(data.results);\n  return data.results;\n};","import { getMovieCredits } from '../FetchApi';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from './Loader/Loader';\n\n const Cast = () => {\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (movieId === '') return;\n    const Cast = async () => {\n      try {\n        setIsLoading(true);\n\n        const resp = await getMovieCredits(movieId);\n        setCast(resp);\n      } catch (error) {\n        console.log('error');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    Cast();\n  }, [movieId]);\n\n  const IMG_URL = 'https://image.tmdb.org/t/p/w500';\n  return (\n    <>\n      {isLoading && <Loader />}\n\n      <ul>\n        {cast.map(({ id, profile_path, name, character }) => (\n          <li key={id}>\n            <img src={IMG_URL + profile_path} alt={name} width=\"150\" />\n            <h3>{name}</h3>\n            <p>Character: {character}</p>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\nexport default Cast;","import styled from 'styled-components';\nexport const Spiner = styled.div`\n  text-align: center;`","import PropTypes from 'prop-types';\nimport { RotatingLines } from 'react-loader-spinner';\nimport {Spiner} from './Loader.styled'\n\nexport const Loader = () => {\n  return (\n    <Spiner>\n      <RotatingLines\n        strokeColor=\"grey\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"96\"\n        visible={true}\n      />\n    </Spiner>\n  );\n};\nLoader.propTypes = {\n  strokeColor: PropTypes.string,\n  strokeWidth: PropTypes.string,\n  animationDuration: PropTypes.string,\n  visible: PropTypes.bool,\n  width: PropTypes.number,\n};"],"names":["axios","api_key","getTrendingFilms","data","results","searchFilms","movieName","getMovieDetails","movieId","getMovieCredits","cast","getMovieReviews","console","log","useState","setCast","isLoading","setIsLoading","useParams","useEffect","Cast","resp","map","id","profile_path","name","character","src","alt","width","Spiner","styled","Loader","strokeColor","strokeWidth","animationDuration","visible"],"sourceRoot":""}
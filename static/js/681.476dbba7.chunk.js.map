{"version":3,"file":"static/js/681.476dbba7.chunk.js","mappings":"+SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAAS,oCAGJ,IAAMC,EAAgB,mCAAG,sGACLF,EAAAA,EAAAA,IAAA,qBADK,uBACpBG,EADoB,EACpBA,KADoB,kBAEnBA,EAAKC,SAFc,2CAAH,qDAKhBC,EAAW,mCAAI,WAAOC,GAAP,yFACLN,EAAAA,EAAAA,IAAA,6BAAgCM,IAD3B,uBACnBH,EADmB,EACnBA,KADmB,kBAEnBA,EAAKC,SAFc,2CAAJ,sDAKXG,EAAe,mCAAG,WAAOC,GAAP,yFACNR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,MADM,uBACrBL,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfM,EAAe,mCAAG,WAAOD,GAAP,yFACNR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,cADM,uBACrBL,EADqB,EACrBA,KADqB,kBAEpBA,EAAKO,MAFe,2CAAH,sDAMfC,EAAe,mCAAG,WAAOH,GAAP,yFACNR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,cADM,uBACrBL,EADqB,EACrBA,KACRS,QAAQC,IAAIV,EAAKC,SAFY,kBAGtBD,EAAKC,SAHiB,2CAAH,qD,8EC3BfU,E,OAASC,GAAAA,IAAH,6C,SCGNC,EAAS,WACpB,OACE,SAACF,EAAD,WACE,SAAC,KAAD,CACEG,YAAY,OACZC,YAAY,IACZC,kBAAkB,OAClBC,MAAM,KACNC,SAAS,KAIhB,C,kHC6BD,UAxCiB,WACf,IAAQb,GAAYc,EAAAA,EAAAA,MAAZd,QACR,GAA8Be,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAmBA,OAjBAC,EAAAA,EAAAA,YAAU,WACR,GAAgB,KAAZpB,EAAJ,CACA,IAAMqB,EAAU,mCAAG,oGAEfF,GAAa,GAFE,UAIIhB,EAAAA,EAAAA,IAAgBH,GAJpB,OAITsB,EAJS,OAKfL,EAAWK,GALI,gDAOflB,QAAQC,IAAR,MAPe,yBASfc,GAAa,GATE,4EAAH,qDAYhBE,GAb0B,CAc3B,GAAE,CAACrB,KAGF,gCACGkB,IAAa,SAAC,IAAD,IACM,IAAnBF,EAAQO,QACP,wBACGP,EAAQQ,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,2BACE,qCAAaD,MACb,uBAAIC,MAFGF,EADE,OAQf,uEAIP,C","sources":["FetchApi.js","components/Loader/Loader.styled.js","components/Loader/Loader.jsx","components/Reviews.jsx"],"sourcesContent":["import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: 'c65b1581ed69fd3b6701ed620730aaec',\n};\n\nexport const getTrendingFilms = async () => {\n    const { data } = await axios.get(`trending/all/day?`);\n      return data.results;\n};\n\nexport const searchFilms  = async (movieName) => {\n  const {data} = await axios.get(`search/movie?query=${movieName}`);\n  return data.results;\n};\n\nexport const getMovieDetails = async (movieId) => {\n  const { data } = await axios.get(`movie/${movieId}?`);\n  return data;\n};\n\nexport const getMovieCredits = async (movieId) => {\n  const { data } = await axios.get(`movie/${movieId}/credits?`);\n    return data.cast;\n \n};\n\nexport const getMovieReviews = async (movieId) => {\n  const { data } = await axios.get(`movie/${movieId}/reviews?`);\n  console.log(data.results);\n  return data.results;\n};","import styled from 'styled-components';\nexport const Spiner = styled.div`\n  text-align: center;`","import PropTypes from 'prop-types';\nimport { RotatingLines } from 'react-loader-spinner';\nimport {Spiner} from './Loader.styled'\n\nexport const Loader = () => {\n  return (\n    <Spiner>\n      <RotatingLines\n        strokeColor=\"grey\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"96\"\n        visible={true}\n      />\n    </Spiner>\n  );\n};\nLoader.propTypes = {\n  strokeColor: PropTypes.string,\n  strokeWidth: PropTypes.string,\n  animationDuration: PropTypes.string,\n  visible: PropTypes.bool,\n  width: PropTypes.number,\n};","import { getMovieReviews } from 'FetchApi';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from './Loader/Loader';\n\n const Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    if (movieId === '') return;\n    const getReviews = async () => {\n      try {\n        setIsLoading(true);\n\n        const resp = await getMovieReviews(movieId);\n        setReviews(resp);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getReviews();\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {reviews.length !== 0 ? (\n        <ul>\n          {reviews.map(({ id, author, content }) => (\n            <li key={id}>\n              <h3>Author: {author}</h3>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>We don`t have any reviews for this movie.</p>\n      )}\n    </>\n  );\n};\nexport default Reviews;"],"names":["axios","api_key","getTrendingFilms","data","results","searchFilms","movieName","getMovieDetails","movieId","getMovieCredits","cast","getMovieReviews","console","log","Spiner","styled","Loader","strokeColor","strokeWidth","animationDuration","width","visible","useParams","useState","reviews","setReviews","isLoading","setIsLoading","useEffect","getReviews","resp","length","map","id","author","content"],"sourceRoot":""}